{"version":3,"sources":["imgs sync /^/.*$","imgs/1A.jpg","imgs/1B.jpg","imgs/1C.jpg","imgs/2A.jpg","types.ts","redux/index.ts","components/Navbar.tsx","components/TableHead.tsx","components/Filter.tsx","components/TableToolbar.tsx","components/iconLoader.tsx","components/BookingTable.tsx","feature/bookingPage.tsx","components/Scheduler.tsx","feature/roomDetail.tsx","components/NotFound.tsx","router.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","IStatus","defaultState","status","INIT","match","roomId","roomName","date","host","guest","orderBy","is_all","bookings","rooms","initialState","serializedState","localStorage","getItem","JSON","parse","err","loadState","bookingSlice","createSlice","name","reducers","setStatus","state","action","payload","setMatch","loadBookings","loadRooms","addBooking","store","configureStore","reducer","subscribe","stringify","setItem","console","log","saveState","getState","actions","Navbar","props","history","useHistory","Box","sx","flexGrow","AppBar","position","Toolbar","Typography","variant","component","title","Button","className","color","onClick","push","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","numeric","disablePadding","label","headCell","key","align","sortDirection","TableSortLabel","active","direction","property","event","Filter","open","handleClose","dispatch","useDispatch","useSelector","thisDate","moment","toDate","useState","filter","setFilter","Dialog","onClose","DialogTitle","DialogContent","FormControl","fullWidth","InputLabel","Select","labelId","value","eventprops","target","MenuItem","row","roomname","utils","DateFnsUtils","autoOk","inputVariant","format","InputAdornmentProps","TextField","onBlur","defaultValue","InputProps","startAdornment","InputAdornment","AccountCircle","DialogActions","thismatch","matchDate","EnhancedTableToolbar","selected","deleteData","length","setOpen","Tooltip","IconButton","Delete","FilterList","Edit","FormControlLabel","control","Switch","defaultChecked","Loader","style","marginTop","loading","css","size","descendingComparator","a","b","EnhancedTable","setOrder","alert","setAlert","setOrderBy","setSelected","page","setPage","rowsPerPage","setRowsPerPage","rows","selectId","n","substring","fetch","method","headers","Accept","body","bookid","delRes","json","delJson","info","newRows","indexOf","emptyRows","Math","max","width","Paper","LOADING","TableContainer","Table","minWidth","aria-labelledby","newSelecteds","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","isItemSelected","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","guests","starttime","finishtime","height","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","Collapse","in","Alert","aria-label","Close","fontSize","BookingPage","query","res","roomRes","resJson","roomJson","LOADED","useEffect","fetchData","theme","createTheme","palette","type","primary","blue","RoomScheduler","appointments","setAppointment","currentDate","room","dateFrom","subtract","dateTo","add","allBookings","r","isBetween","temp","appointment","startDate","Date","endDate","location","data","startDayHour","endDayHour","Img","styled","margin","display","maxWidth","maxHeight","times","RoomDetail","bookId","useParams","todayBooking","setTodayBooking","start","setStart","end","setEnd","roomid","bookInfo","setBookInfo","book","toString","setRoom","tBooking","filterTime","filteredTime","shouldFilter","time","beforeTime","afterTime","Grid","item","container","spacing","justifyContent","xs","sm","md","ends","saveData","severity","ButtonBase","alt","src","require","roomimg","gutterBottom","maxpeople","roominfo","roomspec","SquareFoot","CellWifi","LocalPrintshop","Dashboard","LiveTv","NotFound","ThisRouter","basename","process","exact","path","App","Container","fixed","textAlign","Boolean","window","hostname","WebFont","load","google","families","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.70ab2746.chunk.js","sourcesContent":["var map = {\n\t\"./1A.jpg\": 203,\n\t\"./1B.jpg\": 204,\n\t\"./1C.jpg\": 205,\n\t\"./2A.jpg\": 206\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 202;","module.exports = __webpack_public_path__ + \"static/media/1A.cd575209.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1B.870b1da1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1C.69c530ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2A.84865497.jpg\";","export interface IAppState {\n  status: IStatus;\n  bookings: IBooking[];\n  rooms: IRoom[];\n  match: IMatch;\n}\nexport enum IStatus {\n  INIT,\n  LOADING,\n  LOADED,\n}\nexport interface IBooking {\n  bookid: number;\n  roomname: string;\n  roomid: string;\n  date: string;\n  starttime: string;\n  finishtime: string;\n  host: string;\n  guests: string;\n}\n\nexport interface IRoom {\n  roomid: string;\n  roomname: string;\n  roominfo: string;\n  roomimg: string;\n  maxpeople: string;\n  roomspec: string;\n}\n\nexport interface IMatch {\n  roomId: string;\n  roomName: string;\n  date: string;\n  orderBy: string;\n  host: string;\n  guest: string;\n  is_all: boolean;\n}\n","import { configureStore, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { IAppState, IBooking, IStatus, IMatch, IRoom } from '../types';\n\nconst defaultState: IAppState = {\n  status: IStatus.INIT,\n  match: {roomId: \"\", roomName: \"\", date:\"\", host: \"\", guest: \"\", orderBy: \"default\", is_all: false},\n  bookings: [],\n  rooms: [],\n};\n\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('bookingState');\n    if (!serializedState) return defaultState;\n    else return JSON.parse(serializedState);\n  } catch (err) {\n    return defaultState;\n  }\n};\n\nconst saveState = (state: IAppState) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('bookingState', serializedState);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst initialState: IAppState = loadState();\n\nconst bookingSlice = createSlice({\n  name: 'booking',\n  initialState,\n  reducers: {\n    setStatus(state, action: PayloadAction<IStatus>) {\n      state.status = action.payload;\n    },\n    setMatch(state, action: PayloadAction<IMatch>) {\n      state.match = action.payload;\n    },\n    loadBookings(state, action: PayloadAction<IBooking[]>) {\n      state.bookings = action.payload;\n    },\n    loadRooms(state, action: PayloadAction<IRoom[]>) {\n      state.rooms = action.payload;\n    },\n    addBooking(\n      state,\n      action: PayloadAction<{ question: string; answer: boolean }>\n    ) {\n \n    },\n  },\n});\n\nexport const store = configureStore({ reducer: bookingSlice.reducer });\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nexport const { setStatus, loadBookings, addBooking, setMatch, loadRooms } = bookingSlice.actions;\nexport default bookingSlice.reducer;\n","import * as React from 'react';\nimport { AppBar, Toolbar, Box, Button, Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nexport default function Navbar(props: any) {\n  const history = useHistory();\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\">\n            {props.title}\n          </Typography>\n          {props.title === 'Booking Table' ? (\n            <Button\n              className=\"header-button\"\n              color=\"inherit\"\n              onClick={() => history.push('/roomdetail/0')}\n            >\n              Create New Booking\n            </Button>\n          ) : (\n            <Button\n              className=\"header-button\"\n              color=\"inherit\"\n              onClick={() => history.push('/')}\n            >\n              return\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n","import * as React from 'react';\r\nimport {\r\n  Box,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Checkbox,\r\n} from '@material-ui/core';\r\n\r\nexport default function EnhancedTableHead(props: any) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property: any) => (event: any) => {\r\n    onRequestSort(event, property);\r\n  };\r\n  const headCells = [\r\n    {\r\n      id: 'roomname',\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: 'Room Name',\r\n    },\r\n    {\r\n      id: 'host',\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: 'Host',\r\n    },\r\n    {\r\n      id: 'guests',\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: 'Guests',\r\n    },\r\n    {\r\n      id: 'date',\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: 'Date',\r\n    },\r\n    {\r\n      id: 'period',\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: 'Booking Period',\r\n    },\r\n  ];\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'select all desserts',\r\n            }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? <Box component=\"span\"></Box> : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  FormControl,\r\n  InputLabel,\r\n  DialogTitle,\r\n  Select,\r\n  MenuItem,\r\n  InputAdornment,\r\n} from '@material-ui/core';\r\nimport { AccountCircle } from '@material-ui/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { IAppState, IMatch, IRoom } from '../types';\r\nimport { setMatch } from '../redux';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport moment from 'moment';\r\n\r\nexport default function Filter(props: any) {\r\n  const { open, handleClose } = props;\r\n  const dispatch = useDispatch();\r\n  const rooms: IRoom[] = useSelector((state: IAppState) => {\r\n    return state.rooms;\r\n  });\r\n  const match: IMatch = useSelector((state: IAppState) => {\r\n    return state.match;\r\n  });\r\n  const thisDate =\r\n    match.date === '' ? null : moment(match.date, 'YYYY-MM-DD').toDate();\r\n  const [filter, setFilter] = useState({\r\n    roomName: match.roomName,\r\n    date: thisDate,\r\n    host: match.host,\r\n    guest: match.guest,\r\n  });\r\n  const handleSubmitFilter = () => {\r\n    const matchDate =\r\n      filter.date === null ? '' : moment(filter.date).format('YYYY-MM-DD');\r\n    const thismatch = {\r\n      ...match,\r\n      roomName: filter.roomName,\r\n      date: matchDate,\r\n      host: filter.host,\r\n      guest: filter.guest,\r\n    };\r\n    dispatch(setMatch(thismatch));\r\n    handleClose();\r\n  };\r\n  const handleSelect = (eventprops: any) => {\r\n    setFilter({ ...filter, roomName: eventprops.target.value });\r\n  };\r\n  const handleReset = () => {\r\n    const thismatch = { ...match, roomName: '', date: '', host: '', guest: '' };\r\n    setFilter({ roomName: '', date: null, host: '', guest: '' });\r\n    dispatch(setMatch(thismatch));\r\n  };\r\n  return (\r\n    <Dialog open={open} onClose={handleClose}>\r\n      <DialogTitle>Filter</DialogTitle>\r\n      <DialogContent>\r\n        <div>\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"demo-simple-select-label\">Room Name</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              label=\"Room\"\r\n              value={filter.roomName}\r\n              onChange={handleSelect}\r\n            >\r\n              <MenuItem value={''}>All</MenuItem>\r\n              {rooms.map((row: any) => {\r\n                return <MenuItem value={row.roomname}>{row.roomname}</MenuItem>;\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div className=\"filter-div\">\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              autoOk\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              label=\"Select Date\"\r\n              format=\"MM/dd/yyyy\"\r\n              value={filter.date}\r\n              InputAdornmentProps={{ position: 'start' }}\r\n              onChange={(date) => setFilter({ ...filter, date: date })}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </div>\r\n        <div className=\"filter-div\">\r\n          <TextField\r\n            id=\"host\"\r\n            label=\"Host\"\r\n            onBlur={(e) => setFilter({ ...filter, host: e.target.value })}\r\n            defaultValue={filter.host}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <AccountCircle />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            variant=\"standard\"\r\n          />\r\n        </div>\r\n        <div className=\"filter-div\">\r\n          <TextField\r\n            id=\"guest\"\r\n            label=\"Guest\"\r\n            onBlur={(e) => setFilter({ ...filter, guest: e.target.value })}\r\n            defaultValue={filter.guest}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <AccountCircle />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            variant=\"standard\"\r\n          />\r\n        </div>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleReset}>Reset</Button>\r\n        <Button onClick={handleSubmitFilter}>Apply</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Tooltip,\r\n  FormControlLabel,\r\n  Switch,\r\n} from '@material-ui/core';\r\nimport { Delete, FilterList, Edit } from '@material-ui/icons';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setMatch } from '../redux';\r\nimport { IAppState, IMatch } from '../types';\r\nimport Filter from './Filter';\r\n\r\nexport default function EnhancedTableToolbar(props: any) {\r\n  const { selected, deleteData } = props;\r\n  const numSelected = selected.length;\r\n  const [open, setOpen] = useState(false);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const match: IMatch = useSelector((state: IAppState) => {\r\n    return state.match;\r\n  });\r\n\r\n  const handleChangeAll = (eventprops: any) => {\r\n    const thismatch = { ...match, is_all: !eventprops.target.checked };\r\n    dispatch(setMatch(thismatch));\r\n  };\r\n  const handleOpenFilter = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleCloseFilter = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleDelete = () => {\r\n    deleteData();\r\n  };\r\n\r\n  return (\r\n    <Toolbar>\r\n      {numSelected > 0 ? (\r\n        <Typography color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Bookings\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton onClick={handleDelete}>\r\n            <Delete />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <>\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton onClick={handleOpenFilter}>\r\n              <FilterList />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Filter open={open} handleClose={handleCloseFilter} />\r\n        </>\r\n      )}\r\n      {numSelected === 1 && (\r\n        <Tooltip title=\"Edit\">\r\n          <IconButton\r\n            onClick={() => history.push(`/roomdetail/${selected[0]}`)}\r\n          >\r\n            <Edit />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n      <FormControlLabel\r\n        className=\"switch-all\"\r\n        control={<Switch defaultChecked onChange={handleChangeAll} />}\r\n        label=\"Display valid booking\"\r\n      />\r\n    </Toolbar>\r\n  );\r\n}\r\n","import React  from \"react\";\nimport HashLoader from \"react-spinners/HashLoader\";\n\nfunction Loader() {\n  return (\n    <div className=\"sweet-loading text-center\" style={{marginTop:'150px'}}>\n      <HashLoader color={'#256395'} loading={true} css='' size={80} />\n    </div>\n  );\n}\n\nexport default Loader;\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { IAppState, IStatus, IBooking } from '../types';\r\nimport EnhancedTableHead from './TableHead';\r\nimport EnhancedTableToolbar from './TableToolbar';\r\nimport { loadBookings } from '../redux';\r\nimport {\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TablePagination,\r\n  TableRow,\r\n  Paper,\r\n  Checkbox,\r\n  Collapse,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Loader from '../components/iconLoader';\r\n\r\nfunction descendingComparator(a: any, b: any, orderBy: any) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order: any, orderBy: any) {\r\n  return order === 'desc'\r\n    ? (a: any, b: any) => descendingComparator(a, b, orderBy)\r\n    : (a: any, b: any) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n// This method is created for cross-browser compatibility, if you don't\r\n// need to support IE11, you can use Array.prototype.sort() directly\r\nfunction stableSort(array: any, comparator: any) {\r\n  const stabilizedThis = array.map((el: any, index: any) => [el, index]);\r\n  stabilizedThis.sort((a: any, b: any) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el: any) => el[0]);\r\n}\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = useState('asc');\r\n  const [open, setOpen] = useState(false);\r\n  const [alert, setAlert] = useState('');\r\n  const [orderBy, setOrderBy] = useState('calories');\r\n  const [selected, setSelected] = useState<any[]>([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const dispatch = useDispatch();\r\n  const rows: IBooking[] = useSelector((state: IAppState) => {\r\n    return state.bookings;\r\n  });\r\n  const status: IStatus = useSelector((state: IAppState) => {\r\n    return state.status;\r\n  });\r\n\r\n  async function deleteData() {\r\n    let selectId = '';\r\n    selected.map((n) => (selectId += n + ','));\r\n    selectId = selectId.substring(0, selectId.length - 1);\r\n    const delRes = await fetch('/bookings/delete', {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ bookid: selectId }), // body data type must match \"Content-Type\" header\r\n    });\r\n\r\n    const delJson = await delRes.json();\r\n    setAlert(delJson.info);\r\n    setOpen(true);\r\n    const newRows = rows.filter((row) => {\r\n      return selected.indexOf(row.bookid) === -1;\r\n    });\r\n    dispatch(loadBookings(newRows as any));\r\n    setSelected([]);\r\n  }\r\n  const handleRequestSort = (event: any, property: any) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event: any) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds: any = rows.map((n) => n.bookid);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event: any, name: any) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: any = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: any, newPage: any) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: any) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name: any) => selected.indexOf(name) !== -1;\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Paper style={{ width: '100%' }}>\r\n        <EnhancedTableToolbar selected={selected} deleteData={deleteData} />\r\n        {status === IStatus.LOADING ? (\r\n          <Loader />\r\n        ) : (\r\n          <TableContainer>\r\n            <Table\r\n              style={{ minWidth: 750 }}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={'medium'}\r\n            >\r\n              <EnhancedTableHead\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={rows.length}\r\n              />\r\n              <TableBody>\r\n                {/* if you don't need to support IE11, you can replace the `stableSort` call with:\r\n                 rows.slice().sort(getComparator(order, orderBy)) */}\r\n                {stableSort(rows, getComparator(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row: any, index: any) => {\r\n                    const isItemSelected = isSelected(row.bookid);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        onClick={(event) => handleClick(event, row.bookid)}\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={row.bookid}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            color=\"primary\"\r\n                            checked={isItemSelected}\r\n                            inputProps={{\r\n                              'aria-labelledby': labelId,\r\n                            }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                          padding=\"none\"\r\n                        >\r\n                          {row.roomname}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{row.host}</TableCell>\r\n                        <TableCell align=\"left\">{row.guests}</TableCell>\r\n                        <TableCell align=\"left\">{row.date}</TableCell>\r\n                        <TableCell align=\"left\">\r\n                          {row.starttime + ' - ' + row.finishtime}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {emptyRows > 0 && (\r\n                  <TableRow\r\n                    style={{\r\n                      height: 53 * emptyRows,\r\n                    }}\r\n                  >\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n        <Collapse in={open}>\r\n          <Alert\r\n            action={\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  setOpen(false);\r\n                }}\r\n              >\r\n                <Close fontSize=\"inherit\" />\r\n              </IconButton>\r\n            }\r\n          >\r\n            {alert}\r\n          </Alert>\r\n        </Collapse>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { IAppState, IStatus, IMatch } from '../types';\r\nimport { setStatus, loadBookings, loadRooms } from '../redux';\r\nimport Navbar from '../components/Navbar';\r\nimport EnhancedTable from '../components/BookingTable';\r\n\r\nfunction BookingPage() {\r\n  const match: IMatch = useSelector((state: IAppState) => {\r\n    return state.match;\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  let query =\r\n    'id=' +\r\n    match.roomId +\r\n    '&name=' +\r\n    match.roomName +\r\n    '&date=' +\r\n    match.date +\r\n    '&host=' +\r\n    match.host +\r\n    '&guest=' +\r\n    match.guest +\r\n    '&isall=' +\r\n    match.is_all +\r\n    '&orderby=' +\r\n    match.orderBy;\r\n\r\n  async function fetchData() {\r\n    dispatch(setStatus(IStatus.LOADING));\r\n    const res = await fetch('/bookings?' + query);\r\n    const roomRes = await fetch('/bookings/room?roomid=');\r\n    const resJson = await res.json();\r\n    const roomJson = await roomRes.json();\r\n    dispatch(loadBookings(resJson as any));\r\n    dispatch(loadRooms(roomJson as any));\r\n    dispatch(setStatus(IStatus.LOADED));\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [match]);\r\n\r\n  return (\r\n    <>\r\n      <Navbar title=\"Booking Table\" />\r\n      <div>\r\n        <EnhancedTable />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BookingPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { AppointmentModel, ViewState } from '@devexpress/dx-react-scheduler';\r\nimport {\r\n  Scheduler,\r\n  WeekView,\r\n  Appointments,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\nimport { MuiThemeProvider, createTheme } from '@material-ui/core/styles';\r\nimport { useSelector } from 'react-redux';\r\nimport { IAppState, IBooking } from '../types';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport moment from 'moment';\r\n\r\nconst theme = createTheme({ palette: { type: 'light', primary: blue } });\r\n\r\nexport default function RoomScheduler(props: any) {\r\n  const bookings: IBooking[] = useSelector((state: IAppState) => {\r\n    return state.bookings;\r\n  });\r\n  const [appointments, setAppointment] = useState<AppointmentModel[]>([]);\r\n  const { currentDate, room } = props;\r\n  const dateFrom = moment(currentDate).subtract(7, 'd').format('YYYY-MM-DD');\r\n  const dateTo = moment(currentDate).add(7, 'd').format('YYYY-MM-DD');\r\n\r\n  useEffect(() => {\r\n    let allBookings = bookings.filter((r) => {\r\n      let thisDate = moment(r.date, 'YYYY-MM-DD');\r\n      return (\r\n        thisDate.isBetween(dateFrom, dateTo) ||\r\n        r.date === dateFrom ||\r\n        r.date === dateTo\r\n      );\r\n    });\r\n    if (room) {\r\n      allBookings = allBookings.filter((r) => {\r\n        return r.roomname === room;\r\n      });\r\n    }\r\n    let temp: AppointmentModel[] = [];\r\n    allBookings.map((row: any) => {\r\n      const appointment = {\r\n        title: 'Booked by' + row.host,\r\n        startDate: new Date(row.date + ' ' + row.starttime),\r\n        endDate: new Date(row.date + ' ' + row.finishtime),\r\n        id: row.bookid,\r\n        location: row.roomname,\r\n      };\r\n      temp.push(appointment);\r\n      return true;\r\n    });\r\n    setAppointment(temp);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [room, currentDate]);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <Paper>\r\n        <Scheduler data={appointments}>\r\n          <ViewState currentDate={currentDate} />\r\n          <WeekView startDayHour={8} endDayHour={17} />\r\n          <Appointments />\r\n        </Scheduler>\r\n      </Paper>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  MenuItem,\r\n  Box,\r\n  Grid,\r\n  styled,\r\n  Paper,\r\n  TextField,\r\n  ButtonBase,\r\n  Typography,\r\n  Button,\r\n  Collapse,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { IAppState, IStatus, IRoom, IBooking } from '../types';\r\nimport { setStatus, loadBookings } from '../redux';\r\nimport {\r\n  CellWifi,\r\n  LocalPrintshop,\r\n  Dashboard,\r\n  LiveTv,\r\n  SquareFoot,\r\n  Close,\r\n} from '@material-ui/icons';\r\nimport Navbar from '../components/Navbar';\r\nimport RoomScheduler from '../components/Scheduler';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport moment from 'moment';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\ninterface RouteParams {\r\n  bookId: string;\r\n}\r\n\r\nconst Img = styled('img')({\r\n  margin: 'auto',\r\n  display: 'block',\r\n  maxWidth: '100%',\r\n  maxHeight: '100%',\r\n});\r\n\r\nlet times = [\r\n  '08:00:00',\r\n  '08:30:00',\r\n  '09:00:00',\r\n  '09:30:00',\r\n  '10:00:00',\r\n  '10:30:00',\r\n  '11:00:00',\r\n  '11:30:00',\r\n  '12:00:00',\r\n  '12:30:00',\r\n  '13:00:00',\r\n  '13:30:00',\r\n  '14:00:00',\r\n  '14:30:00',\r\n  '15:00:00',\r\n  '15:30:00',\r\n  '16:00:00',\r\n  '16:30:00',\r\n];\r\n\r\nfunction RoomDetail() {\r\n  const { bookId } = useParams<RouteParams>();\r\n  const [alert, setAlert] = useState(['', 'success']);\r\n  const [open, setOpen] = useState(false);\r\n  const rooms: IRoom[] = useSelector((state: IAppState) => {\r\n    return state.rooms;\r\n  });\r\n  const bookings: IBooking[] = useSelector((state: IAppState) => {\r\n    return state.bookings;\r\n  });\r\n  const [todayBooking, setTodayBooking] = useState([]);\r\n  const [start, setStart] = useState(times);\r\n  const [end, setEnd] = useState<any>([]);\r\n  const [bookInfo, setBookInfo] = useState<IBooking>({\r\n    bookid: 0,\r\n    roomname: '',\r\n    roomid: '',\r\n    date: moment(new Date()).format('YYYY-MM-DD'),\r\n    starttime: '',\r\n    finishtime: '',\r\n    host: '',\r\n    guests: '',\r\n  });\r\n  let book =\r\n    bookId !== '0'\r\n      ? bookings.filter((r) => {\r\n          return r.bookid.toString() === bookId;\r\n        })\r\n      : [];\r\n\r\n  const [room, setRoom] = useState(\r\n    book.length > 0\r\n      ? rooms.filter((r) => {\r\n          return r.roomname.toString() === book[0].roomname;\r\n        })\r\n      : []\r\n  );\r\n  const dispatch = useDispatch();\r\n  let query =\r\n    room.length > 0\r\n      ? '/bookings/room?roomid=' + room[0].roomname\r\n      : '/bookings/room?roomid=';\r\n\r\n  async function fetchData() {\r\n    dispatch(setStatus(IStatus.LOADING));\r\n    const roomRes = await fetch(query);\r\n    const roomJson = await roomRes.json();\r\n    let tBooking = roomJson.filter((r: any) => {\r\n      return r.date === bookInfo.date && r.bookid !== bookInfo.bookid;\r\n    });\r\n    if (bookInfo.date === '') {\r\n      tBooking = roomJson.filter((r: any) => {\r\n        return r.date === book[0].date && r.bookid !== book[0].bookid;\r\n      });\r\n    }\r\n    filterTime(tBooking);\r\n    setTodayBooking(tBooking);\r\n    dispatch(setStatus(IStatus.LOADED));\r\n  }\r\n  useEffect(() => {\r\n    setBookInfo(book[0]);\r\n    setEnd([book[0].finishtime]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (room.length > 0) {\r\n      fetchData();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [room]);\r\n  const handleSelect = (eventprops: any) => {\r\n    setRoom(\r\n      rooms.filter((r) => {\r\n        return r.roomname === eventprops.target.value;\r\n      })\r\n    );\r\n    setBookInfo({ ...bookInfo, roomname: eventprops.target.value });\r\n  };\r\n  const handleSelectStart = (eventprops: any) => {\r\n    const index = times.indexOf(eventprops.target.value);\r\n    let ends = [];\r\n    if (index === 17) {\r\n      ends.push('17:00:00');\r\n    } else if (index === 16) {\r\n      ends.push('16:30:00');\r\n      ends.push('17:00:00');\r\n    } else {\r\n      ends.push(times[index + 1]);\r\n      ends.push(times[index + 2]);\r\n    }\r\n    const format = 'hh:mm:ss';\r\n    const filteredTime = ends.filter((r) => {\r\n      let shouldFilter = false;\r\n      const time = moment(r, format);\r\n      todayBooking.map((row: any) => {\r\n        const beforeTime = moment(row.starttime, format);\r\n        const afterTime = moment(row.finishtime, format);\r\n        if (time.isBetween(beforeTime, afterTime) || r === row.finishtime) {\r\n          shouldFilter = true;\r\n        }\r\n        return true;\r\n      });\r\n      return !shouldFilter;\r\n    });\r\n    setEnd(filteredTime);\r\n    setBookInfo({ ...bookInfo, starttime: eventprops.target.value });\r\n  };\r\n  const handleSelectEnd = (eventprops: any) => {\r\n    setBookInfo({ ...bookInfo, finishtime: eventprops.target.value });\r\n  };\r\n  const handleBook = (date: any) => {\r\n    filterTime(todayBooking);\r\n    setBookInfo({ ...bookInfo, date: moment(date).format('YYYY-MM-DD') });\r\n  };\r\n  const filterTime = (book: any) => {\r\n    const format = 'hh:mm:ss';\r\n    const filteredTime = start.filter((r) => {\r\n      let shouldFilter = false;\r\n      const time = moment(r, format);\r\n      book.map((row: any) => {\r\n        const beforeTime = moment(row.starttime, format);\r\n        const afterTime = moment(row.finishtime, format);\r\n        if (time.isBetween(beforeTime, afterTime) || r === row.starttime) {\r\n          shouldFilter = true;\r\n        }\r\n        return true;\r\n      });\r\n      return !shouldFilter;\r\n    });\r\n    setStart(filteredTime);\r\n  };\r\n  const handleSave = (eventprops: any) => {\r\n    if (bookInfo.roomname === '') {\r\n      setAlert([\"Room name can't be empty\", 'error']);\r\n      setOpen(true);\r\n    } else if (bookInfo.date === '') {\r\n      setAlert([\"Date can't be empty\", 'error']);\r\n      setOpen(true);\r\n    } else if (bookInfo.host === '') {\r\n      setAlert([\"Host name can't be empty\", 'error']);\r\n      setOpen(true);\r\n    } else if (bookInfo.guests === '') {\r\n      setAlert([\"Guest name can't be empty\", 'error']);\r\n      setOpen(true);\r\n    } else if (bookInfo.starttime === '') {\r\n      setAlert([\"Start time can't be empty\", 'error']);\r\n      setOpen(true);\r\n    } else if (bookInfo.finishtime === '') {\r\n      setAlert([\"Finish time can't be empty\", 'error']);\r\n      setOpen(true);\r\n    } else {\r\n      saveData();\r\n    }\r\n  };\r\n\r\n  async function saveData() {\r\n    const delRes = await fetch('/bookings/save', {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(bookInfo), // body data type must match \"Content-Type\" header\r\n    });\r\n    const delJson = await delRes.json();\r\n    if (book.length === 0) {\r\n      const newRows = bookings.push(bookInfo);\r\n      dispatch(loadBookings(newRows as any));\r\n      book.push(bookInfo);\r\n    } else {\r\n      let newRows = bookings.filter((r) => {\r\n        return r.bookid.toString() !== bookId;\r\n      });\r\n      newRows.push(bookInfo);\r\n      dispatch(loadBookings(newRows as any));\r\n    }\r\n    setAlert([delJson.info, 'success']);\r\n    setOpen(true);\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar title=\"Room Scheduler\" />\r\n      <br />\r\n      <div>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Grid item container spacing={1} justifyContent=\"center\">\r\n            <Grid item xs={12} sm={6} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">Room Name</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  label=\"Age\"\r\n                  value={room.length > 0 ? room[0].roomname : ''}\r\n                  onChange={handleSelect}\r\n                >\r\n                  {rooms.map((row: any) => {\r\n                    return (\r\n                      <MenuItem key={row.roomname} value={row.roomname}>{row.roomname}</MenuItem>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={6}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  autoOk\r\n                  variant=\"inline\"\r\n                  inputVariant=\"outlined\"\r\n                  label=\"Select Date\"\r\n                  format=\"MM/dd/yyyy\"\r\n                  value={bookInfo.date}\r\n                  InputAdornmentProps={{ position: 'start' }}\r\n                  onChange={handleBook}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={6}>\r\n              <TextField\r\n                label=\"Host Name\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                defaultValue={book.length > 0 ? book[0].host : ''}\r\n                onBlur={(e) =>\r\n                  setBookInfo({ ...bookInfo, host: e.target.value })\r\n                }\r\n                name=\"host\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={6}>\r\n              <TextField\r\n                label=\"Guest Name\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onBlur={(e) =>\r\n                  setBookInfo({ ...bookInfo, guests: e.target.value })\r\n                }\r\n                defaultValue={book.length > 0 ? book[0].guests : ''}\r\n                name=\"guests\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4} md={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  Start Time\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  label=\"Start Time\"\r\n                  value={bookInfo.starttime}\r\n                  onChange={handleSelectStart}\r\n                >\r\n                  {start.map((row: any) => {\r\n                    return <MenuItem key={row} value={row}>{row}</MenuItem>;\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4} md={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">End Time</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  label=\"End Time\"\r\n                  value={bookInfo.finishtime}\r\n                  onChange={handleSelectEnd}\r\n                >\r\n                  {end.map((row: any) => {\r\n                    return <MenuItem key={row} value={row}>{row}</MenuItem>;\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4} md={4}>\r\n              <Button variant=\"contained\" onClick={handleSave}>\r\n                Save Booking\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Collapse in={open}>\r\n            <Alert\r\n              severity={alert[1] === 'success' ? 'success' : 'error'}\r\n              action={\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  color=\"inherit\"\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    setOpen(false);\r\n                  }}\r\n                >\r\n                  <Close fontSize=\"inherit\" />\r\n                </IconButton>\r\n              }\r\n            >\r\n              {alert[0]}\r\n            </Alert>\r\n          </Collapse>\r\n        </Box>\r\n        {room.length > 0 && (\r\n          <Paper style={{ margin: 'auto', width: '100%', flexGrow: 1 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item>\r\n                <ButtonBase style={{ width: 285, height: 245 }}>\r\n                  <Img\r\n                    alt=\"complex\"\r\n                    src={require('../imgs/' + room[0].roomimg)}\r\n                  />\r\n                </ButtonBase>\r\n              </Grid>\r\n              <Grid item md={8} sm container>\r\n                <Grid item xs container direction=\"column\" spacing={2}>\r\n                  <Grid item xs>\r\n                    <Typography\r\n                      key={\"room\"}\r\n                      gutterBottom\r\n                      variant=\"subtitle1\"\r\n                      style={{ marginTop: 20 }}\r\n                      component=\"h2\"\r\n                    >\r\n                      Room: {room[0].roomname}\r\n                    </Typography>\r\n                    <Typography key={\"people\"} variant=\"subtitle1\" component=\"h3\">\r\n                      Max People: {room[0].maxpeople}\r\n                    </Typography>\r\n                    <Typography key={\"info\"} variant=\"subtitle1\" component=\"h3\">\r\n                      Room Information: {room[0].roominfo}\r\n                    </Typography>\r\n                    <Typography key={\"spec\"} variant=\"subtitle1\">\r\n                      {Object.keys(JSON.parse(room[0].roomspec)).map((key) => {\r\n                        switch (key) {\r\n                          case 'Size':\r\n                            return (\r\n                              <>\r\n                                <SquareFoot key={key} />\r\n                                {'  ' +\r\n                                  JSON.parse(room[0].roomspec)[key] +\r\n                                  '  '}\r\n                              </>\r\n                            );\r\n                          case 'Wifi':\r\n                            return (\r\n                              <>\r\n                                <CellWifi key={key} />\r\n                                {'   Wifi   '}\r\n                              </>\r\n                            );\r\n                          case 'Printer':\r\n                            return (\r\n                              <>\r\n                                <LocalPrintshop key={key} />\r\n                                {'   Printer   '}\r\n                              </>\r\n                            );\r\n                          case 'Whiteboards':\r\n                            return (\r\n                              <>\r\n                                <Dashboard key={key} />\r\n                                {'   Whiteboards   '}\r\n                              </>\r\n                            );\r\n                          case 'TV':\r\n                            return (\r\n                              <>\r\n                                <LiveTv key={key} />\r\n                                {'   Tv   '}\r\n                              </>\r\n                            );\r\n                          default:\r\n                            return '';\r\n                        }\r\n                      })}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <RoomScheduler room={bookInfo.roomname} currentDate={bookInfo.date} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RoomDetail;\r\n","import React from 'react';\n\nconst NotFound = () => {\n  // If the user is on an unknown page, show 404\n  return <div>opps,404 not found</div>;\n};\n\nexport default NotFound;\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport BookingPage from './feature/bookingPage';\r\nimport RoomDetail from './feature/roomDetail';\r\nimport NotFound from './components/NotFound';\r\n\r\n\r\nconst ThisRouter = () => { \r\n    return <Router basename={`${process.env.PUBLIC_URL}/`}>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={BookingPage} />\r\n              <Route exact path=\"/roomdetail/:bookId\">              \r\n                <RoomDetail />\r\n              </Route>\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </Router>\r\n}\r\n\r\nexport default ThisRouter;\r\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport ThisRouter from './router';\n\nconst App = () => {\n  return (\n    <div>\n      <Container fixed>\n        <Box textAlign=\"center\" marginTop=\"3em\">\n          <ThisRouter />\n        </Box>\n      </Container>\n    </div>  \n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n  google: {\n    families: ['Neucha'],\n  },\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}